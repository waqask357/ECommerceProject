@model ProductSearchViewModel
@{
    ViewBag.Title = "ProductsTable";
    Layout = null;
}
<br />
<button type="button" id="newBtn">New</button>
<br />

<div>
    <form method="post">
        <div class="row">
            <div class="col-md-8">
                <div class="form-group">
                    <label>Search</label>
                    <input name="Search" class="form-control" id="searchTxt" value="@Model.SearchTerm" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label>Action</label>
                    <div class="row">
                        <div class="col-md-4 pr-0">
                            <button id="searchBtn" class="btn btn-primary form-control" type="button">Search</button>
                        </div>
                        <div class="col-md-4 pr-0">
                            <button class="btn btn-primary form-control" type="button" id="resetBtn">Reset</button>
                        </div>
                        <div class="col-md-4 pr-0">
                            <button class="btn btn-primary form-control" type="button" id="newButton">New</button>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </form>
    @*<button id="newBtn">New</button>*@
</div>
<div>
    <table class="table table-striped">
        <thead>
            <tr>
                <td class="font-weight-bold">Product Name</td>
                <td class="font-weight-bold">Category</td>
                <td class="font-weight-bold">Price</td>
                <td class="wrap-td font-weight-bold">Actions</td>
            </tr>
        </thead>
        <tbody>
            @if (Model.Products != null && Model.Products.Count > 0)
            {
                foreach (var product in Model.Products)
                {
                    <tr>
                        <td>@product.Name</td>
                        <td>
                            @if (@product.Category != null)
                            {
                                <text>@product.Category.Name</text>
                            }
                            else
                            {
                                <text>-</text>
                            }
                        </td>
                        <td>@product.Price</td>
                        <td class="wrap-td">
                            <button class="editBtn" data-id="@product.Id">Edit</button>
                            <button class="deleteBtn" data-id="@product.Id">Delete</button>
                            <button class="AddtoCart" data-id="@product.Id">Add To Cart</button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td class="text-danger" colspan="4">No Products Found.</td>
                </tr>
            }
        </tbody>
    </table>
    <div>
        <button id="PreviousRecords">Previous</button>
        <button id="NextRecords">Next</button>
    </div>
</div>
<script>
    $("#searchBtn").click(function () {
        var searchValue = $("#searchTxt").val();
        $.ajax({
            url: '@Url.Action("ProductTable", "Products")', //'/Products/ProductTable',
            data: {
                search: searchValue
            }
        })
            .done(function (response) {

                $("#tableContainer").html(response);

            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Failed");
            });
    });

    $("#newButton").click(function () {
        $.ajax({
            url: '@Url.Action("Create", "Products")', //'/Products/Create'
        })
            .done(function (response) {
                debugger;
                $("#actionContainer").html(response);
                focusAction("actionContainer");
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Failed");
            });
    });

    $(".editBtn").click(function () {
        $.ajax({
            url: '@Url.Action("Edit", "Products")', //'/Product/Edit',
            data: {
                Id: $(this).attr('data-id')
            }
        })
            .done(function (response) {
                $("#actionContainer").html(response);
                focusAction("actionContainer");
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Failed");
            });
    });

    $(".deleteBtn").click(function () {

        swal({
            title: "Confirm?",
            text: "Are You Sure Want to Delete This Product?",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {

                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("Delete", "Products")', //'/Product/Delete',
                        data: {
                            Id: $(this).attr("data-Id")
                        }
                    })
                        .done(function (response) {
                            $("#tablContainer").html(response)
                            swal("Product deleted Successfully!", {
                                icon: "success",
                            });
                        })
                        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                            alert("Failed");
                        });
                }
            });
    });
    //array in javascript
    var products = [];

    $(".AddtoCart").click(function () {
        debugger;
        var ProductId = $(this).attr("data-Id");

        products.push(ProductId);

        $.cookie('CartProduct', products.join("-"), { path: '/' });
        //alert("Product Added to cart");
    });

  
</script>

